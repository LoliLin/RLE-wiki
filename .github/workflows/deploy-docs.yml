name: 部署到 Github Pages

on:
  push:
    branches:
      - 'main' # 当推送到 main 分支时触发
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs.yml'
      - 'package.json'
      - 'packages/**'
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false
  
jobs:
  deploy:
  
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    runs-on: ubuntu-latest

    steps:
      # 第一步：检出代码
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 第二步：安装 pnpm
      - name: 安装 pnpm
        uses: pnpm/action-setup@v4

      # 第三步：安装依赖
      - name: 安装依赖
        run: pnpm install

      - name: 更新主题包
        run: pnpm update @project-trans/vitepress-theme-project-trans@prerelease

      # 第四步：构建项目
      - name: 构建项目
        run: pnpm build # 构建 VitePress 项目

      # 第五步：安装 Wrangler
      - name: 安装 Wrangler
        run: pnpm add -g wrangler@3 # 安装 Wrangler v3

      # 第六步：打包为 Github Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist # 构建输出目录
          name: github-pages

      # 第七步：发布到 Github Pages
      - name: 发布到 Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
